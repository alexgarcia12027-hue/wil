// MCP Server for Abogado Wilson Legal Services\nconst { Server } = require('@modelcontextprotocol/sdk/server');\nconst { StdioServerTransport } = require('@modelcontextprotocol/sdk/server/stdio');\nconst express = require('express');\nconst cors = require('cors');\nrequire('dotenv').config();\n\n// Initialize MCP Server\nconst server = new Server(\n  {\n    name: 'abogado-wilson-mcp',\n    version: '1.0.0',\n  },\n  {\n    capabilities: {\n      tools: {},\n      resources: {},\n      prompts: {},\n    },\n  }\n);\n\n// Mock legal database\nconst legalDatabase = {\n  civil: [\n    {\n      id: 'civil-001',\n      title: 'Contrato de Arrendamiento',\n      description: 'Plantilla estándar para contratos de arrendamiento de bienes inmuebles',\n      content: 'CONTRATO DE ARRENDAMIENTO\\n\\nEn la ciudad de [CIUDAD], a [FECHA], comparecen:\\n\\nARRENDADOR: [NOMBRE COMPLETO], con cédula [CEDULA]\\nARRENDATARIO: [NOMBRE COMPLETO], con cédula [CEDULA]\\n\\nOBJETO: El arrendador entrega en arrendamiento al arrendatario el inmueble ubicado en [DIRECCION]...'\n    },\n    {\n      id: 'civil-002',\n      title: 'Contrato de Compraventa',\n      description: 'Plantilla estándar para contratos de compraventa de bienes muebles',\n      content: 'CONTRATO DE COMPRavENTA\\n\\nEn la ciudad de [CIUDAD], a [FECHA], comparecen:\\n\\nVENDEDOR: [NOMBRE COMPLETO], con cédula [CEDULA]\\nCOMPRADOR: [NOMBRE COMPLETO], con cédula [CEDULA]\\n\\nOBJETO: El vendedor transfiere al comprador la propiedad del bien mueble descrito a continuación...'\n    }\n  ],\n  penal: [\n    {\n      id: 'penal-001',\n      title: 'Denuncia Penal',\n      description: 'Plantilla estándar para presentar una denuncia penal',\n      content: 'DENUNCIA PENAL\\n\\nANTE: [AUTORIDAD COMPETENTE]\\n\\nDENUNCIANTE: [NOMBRE COMPLETO], con cédula [CEDULA], domiciliado en [DIRECCION]\\n\\nHECHOS:\\n\\n[DESCRIPCION DETALLADA DE LOS HECHOS]\\n\\nPETICIÓN:\\n\\nSolicito se sirva iniciar las investigaciones pertinentes y aplicar el ordenamiento jurídico correspondiente...'\n    }\n  ],\n  laboral: [\n    {\n      id: 'laboral-001',\n      title: 'Contrato de Trabajo',\n      description: 'Plantilla estándar para contratos de trabajo',\n      content: 'CONTRATO DE TRABAJO\\n\\nEn la ciudad de [CIUDAD], a [FECHA], comparecen:\\n\\nEMPLEADOR: [NOMBRE COMPLETO], con RUC [RUC]\\nTRABAJADOR: [NOMBRE COMPLETO], con cédula [CEDULA]\\n\\nOBJETO: El empleador contrata los servicios del trabajador para desempeñar el cargo de [CARGO]...'\n    }\n  ]\n};\n\n// Register tools\nserver.setRequestHandler('get_legal_templates', async (request) => {\n  const { category } = request.params;\n  \n  if (category && legalDatabase[category]) {\n    return {\n      templates: legalDatabase[category]\n    };\n  }\n  \n  return {\n    templates: Object.values(legalDatabase).flat()\n  };\n});\n\nserver.setRequestHandler('get_template_by_id', async (request) => {\n  const { id } = request.params;\n  \n  for (const category of Object.values(legalDatabase)) {\n    const template = category.find(t => t.id === id);\n    if (template) {\n      return { template };\n    }\n  }\n  \n  throw new Error(`Template with id ${id} not found`);\n});\n\nserver.setRequestHandler('generate_legal_document', async (request) => {\n  const { templateId, data } = request.params;\n  \n  // Find template\n  let template = null;\n  for (const category of Object.values(legalDatabase)) {\n    const found = category.find(t => t.id === templateId);\n    if (found) {\n      template = found;\n      break;\n    }\n  }\n  \n  if (!template) {\n    throw new Error(`Template with id ${templateId} not found`);\n  }\n  \n  // Generate document by replacing placeholders\n  let document = template.content;\n  for (const [key, value] of Object.entries(data)) {\n    document = document.replace(new RegExp(`\\\\[${key.toUpperCase()}\\\\]`, 'g'), value);\n  }\n  \n  return {\n    document,\n    title: template.title\n  };\n});\n\nserver.setRequestHandler('analyze_legal_case', async (request) => {\n  const { caseData } = request.params;\n  \n  // Mock legal analysis\n  return {\n    summary: `Análisis del caso: ${caseData.type}`,\n    risks: ['Riesgo 1', 'Riesgo 2'],\n    recommendations: ['Recomendación 1', 'Recomendación 2'],\n    estimatedCost: '$1000-$5000'\n  };\n});\n\n// Start server\nasync function start() {\n  const transport = new StdioServerTransport();\n  await server.connect(transport);\n  console.log('🏛️  Abogado Wilson MCP Server started');\n  console.log('🔗 Connected to MCP transport');\n  console.log('✅ Available tools: get_legal_templates, get_template_by_id, generate_legal_document, analyze_legal_case');\n}\n\nstart().catch(console.error);